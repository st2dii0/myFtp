{
  "{\"sourceRoot\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"filename\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"plugins\":[{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server",
        "sourceFileName": "myFtpServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import { Server } from 'tls';\nconst port = process.argv[2] || 8080;\n\nconst server = _net.default.createServer(socket => {\n  socket.on('data', () => {\n    console.log('Hello world');\n  });\n}); //server.listen(port);\n\n\nclass FtpServer extends Server {\n  constructor() {\n    super();\n    this.port = port || 8080;\n  }\n\n  start() {\n    super.create(this.port);\n  }\n\n}\n\nlet ftpServer = new FtpServer();\nftpServer.start();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15RnRwU2VydmVyLmpzIl0sIm5hbWVzIjpbInBvcnQiLCJwcm9jZXNzIiwiYXJndiIsInNlcnZlciIsIm5ldCIsImNyZWF0ZVNlcnZlciIsInNvY2tldCIsIm9uIiwiY29uc29sZSIsImxvZyIsIkZ0cFNlcnZlciIsIlNlcnZlciIsImNvbnN0cnVjdG9yIiwic3RhcnQiLCJjcmVhdGUiLCJmdHBTZXJ2ZXIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQTtBQUVBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYixLQUFtQixJQUFoQzs7QUFFQSxNQUFNQyxNQUFNLEdBQUdDLGFBQUlDLFlBQUosQ0FBa0JDLE1BQUQsSUFBVTtBQUN0Q0EsRUFBQUEsTUFBTSxDQUFDQyxFQUFQLENBQVUsTUFBVixFQUFrQixNQUFJO0FBQ2xCQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaO0FBQ0gsR0FGRDtBQUdILENBSmMsQ0FBZixDLENBS0E7OztBQUdBLE1BQU1DLFNBQU4sU0FBd0JDLE1BQXhCLENBQThCO0FBQzFCQyxFQUFBQSxXQUFXLEdBQUU7QUFDVDtBQUNBLFNBQUtaLElBQUwsR0FBWUEsSUFBSSxJQUFJLElBQXBCO0FBQ0g7O0FBRURhLEVBQUFBLEtBQUssR0FBRTtBQUNILFVBQU1DLE1BQU4sQ0FBYSxLQUFLZCxJQUFsQjtBQUNIOztBQVJ5Qjs7QUFXOUIsSUFBSWUsU0FBUyxHQUFHLElBQUlMLFNBQUosRUFBaEI7QUFDQUssU0FBUyxDQUFDRixLQUFWIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zdDJkaWlvL09uZURyaXZlIC0gRWZyZWkvUHJvZ1ByYWcvbXlGdHAvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5ldCBmcm9tICduZXQnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbi8vIGltcG9ydCB7IFNlcnZlciB9IGZyb20gJ3Rscyc7XG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmFyZ3ZbMl0gfHwgODA4MDtcblxuY29uc3Qgc2VydmVyID0gbmV0LmNyZWF0ZVNlcnZlcigoc29ja2V0KT0+e1xuICAgIHNvY2tldC5vbignZGF0YScsICgpPT57XG4gICAgICAgIGNvbnNvbGUubG9nKCdIZWxsbyB3b3JsZCcpO1xuICAgIH0pXG59KVxuLy9zZXJ2ZXIubGlzdGVuKHBvcnQpO1xuXG5cbmNsYXNzIEZ0cFNlcnZlciBleHRlbmRzIFNlcnZlcntcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnBvcnQgPSBwb3J0IHx8IDgwODA7XG4gICAgfVxuXG4gICAgc3RhcnQoKXtcbiAgICAgICAgc3VwZXIuY3JlYXRlKHRoaXMucG9ydCk7XG4gICAgfVxufVxuXG5sZXQgZnRwU2VydmVyID0gbmV3IEZ0cFNlcnZlcigpO1xuZnRwU2VydmVyLnN0YXJ0KCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "myFtpServer.js"
      ],
      "names": [
        "port",
        "process",
        "argv",
        "server",
        "net",
        "createServer",
        "socket",
        "on",
        "console",
        "log",
        "FtpServer",
        "Server",
        "constructor",
        "start",
        "create",
        "ftpServer"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,KAAmB,IAAhC;;AAEA,MAAMC,MAAM,GAAGC,aAAIC,YAAJ,CAAkBC,MAAD,IAAU;AACtCA,EAAAA,MAAM,CAACC,EAAP,CAAU,MAAV,EAAkB,MAAI;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GAFD;AAGH,CAJc,CAAf,C,CAKA;;;AAGA,MAAMC,SAAN,SAAwBC,MAAxB,CAA8B;AAC1BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKZ,IAAL,GAAYA,IAAI,IAAI,IAApB;AACH;;AAEDa,EAAAA,KAAK,GAAE;AACH,UAAMC,MAAN,CAAa,KAAKd,IAAlB;AACH;;AARyB;;AAW9B,IAAIe,SAAS,GAAG,IAAIL,SAAJ,EAAhB;AACAK,SAAS,CAACF,KAAV",
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server",
      "sourcesContent": [
        "import net from 'net';\nimport fs from 'fs';\n// import { Server } from 'tls';\n\nconst port = process.argv[2] || 8080;\n\nconst server = net.createServer((socket)=>{\n    socket.on('data', ()=>{\n        console.log('Hello world');\n    })\n})\n//server.listen(port);\n\n\nclass FtpServer extends Server{\n    constructor(){\n        super();\n        this.port = port || 8080;\n    }\n\n    start(){\n        super.create(this.port);\n    }\n}\n\nlet ftpServer = new FtpServer();\nftpServer.start();"
      ]
    },
    "sourceType": "script",
    "mtime": 1569309140071
  },
  "{\"sourceRoot\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"filename\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server/myFtpServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server",
        "sourceFileName": "myFtpServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utils = require(\"../common/utils\");\n\nvar _db = _interopRequireDefault(require(\"../config/db.json\"));\n\nvar _child_process = require(\"child_process\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar port = process.argv[2] || 8080;\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server() {\n    _classCallCheck(this, Server);\n  }\n\n  _createClass(Server, [{\n    key: \"create\",\n    value: function create(port, callback) {\n      var instance = _net[\"default\"].createServer(callback);\n\n      instance.on('error', function (err) {\n        console.error(err);\n      });\n      instance.on('close', function () {\n        console.log('Server just died');\n      });\n      instance.listen(port, function () {\n        console.log(\"Server started on port \".concat(port));\n      });\n    }\n  }]);\n\n  return Server;\n}();\n\nvar FtpServer =\n/*#__PURE__*/\nfunction (_Server) {\n  _inherits(FtpServer, _Server);\n\n  function FtpServer() {\n    var _this;\n\n    _classCallCheck(this, FtpServer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FtpServer).call(this));\n    _this.port = port;\n    _this.ROOT_FTP_DIRECTORY = '/tmp';\n    return _this;\n  }\n\n  _createClass(FtpServer, [{\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(FtpServer.prototype), \"create\", this).call(this, this.port, function (socket) {\n        console.log('Socket connected');\n        socket.setEncoding('ascii');\n        socket.on('close', function () {\n          console.log('Socket disconnected');\n        });\n        socket.on('end', function () {\n          (0, _utils.log)('Client disconnected', \"cyan\");\n          process.exit(0);\n        });\n        socket.on('data', function (data) {\n          data = data.trim();\n\n          var _data$split = data.split(' '),\n              _data$split2 = _toArray(_data$split),\n              cmd = _data$split2[0],\n              args = _data$split2.slice(1);\n\n          if (!(0, _utils.isallowedFtpCmd)(cmd)) {\n            console.log(cmd);\n            socket.write(\"This command is not available.\");\n            return;\n          }\n\n          if ((!socket.session || !socket.session.isConnected) && !(0, _utils.isallowedFtpCmdLogged)(cmd)) {\n            socket.write(\"You need to login foo\");\n            return;\n          }\n\n          cmd = cmd.toLowerCase();\n\n          _this2[cmd].apply(_this2, [socket].concat(_toConsumableArray(args)));\n        });\n      });\n    }\n  }, {\n    key: \"quit\",\n    value: function quit(socket) {\n      socket.end();\n    }\n  }, {\n    key: \"user\",\n    value: function user(socket, username) {\n      var user = _db[\"default\"].find(function (user) {\n        return user.username === username;\n      });\n\n      if (!user) {\n        socket.write(\"Account needed\");\n      } else {\n        socket.session = {\n          username: username,\n          isConnected: false\n        };\n        socket.write(\"Username <\".concat(username, \"> ok -- password needed\"));\n      }\n    }\n  }, {\n    key: \"pass\",\n    value: function pass(socket, password) {\n      if (!socket.session) {\n        socket.write('Login first');\n        return;\n      }\n\n      var user = _db[\"default\"].find(function (user) {\n        return socket.session.username === user.username;\n      });\n\n      if (user.password === password) {\n        socket.session.isConnected = true;\n        this.checkDir(socket, user.username);\n        socket.write(\"Password accepted, you're logged\");\n      } else {\n        socket.write('Wrong password, Run!');\n      }\n    }\n  }, {\n    key: \"list\",\n    value: function list(socket) {\n      var root_dir = socket.session.directory.split('/');\n      root_dir.pop();\n      var user_current_dir = socket.session.pwd;\n      (0, _child_process.exec)(\"ls -l \".concat(_path[\"default\"].join(root_dir.join('/'), user_current_dir)), function (err, stdout, stderr) {\n        socket.write(stdout);\n      });\n    }\n  }, {\n    key: \"checkDir\",\n    value: function checkDir(socket, username) {\n      var dir = _path[\"default\"].join(this.ROOT_FTP_DIRECTORY, username);\n\n      if (!_fs[\"default\"].existsSync(dir)) {\n        _fs[\"default\"].mkdirSync(dir);\n      }\n\n      socket.session.directory = dir;\n      socket.session.pwd = \"/\".concat(username);\n    }\n  }, {\n    key: \"pwd\",\n    value: function pwd(socket) {\n      socket.write();\n    }\n  }, {\n    key: \"help\",\n    value: function help(socket) {\n      var str = \"\\n        U foo need sum help :\\n\\n        - USER <username>: check if the user exist\\n        - PASS <password>: authenticate the user with a password\\n        - LIST: list the current directory of the server\\n        - CWD <directory>: change the current directory of the server\\n        - RETR <filename>: transfer a copy of the file FILE from the server to the client\\n        - STOR <filename>: transfer a copy of the file FILE from the client to the server\\n        - PWD: display the name of the current directory of the server\\n        - HELP: send helpful information to the client\\n        - QUIT: close the connection and stop the program\\n        \";\n      socket.write(str);\n    }\n  }]);\n\n  return FtpServer;\n}(Server);\n\nvar ftp = new FtpServer();\nftp.start();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15RnRwU2VydmVyLmpzIl0sIm5hbWVzIjpbInBvcnQiLCJwcm9jZXNzIiwiYXJndiIsIlNlcnZlciIsImNhbGxiYWNrIiwiaW5zdGFuY2UiLCJuZXQiLCJjcmVhdGVTZXJ2ZXIiLCJvbiIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImxvZyIsImxpc3RlbiIsIkZ0cFNlcnZlciIsIlJPT1RfRlRQX0RJUkVDVE9SWSIsInNvY2tldCIsInNldEVuY29kaW5nIiwiZXhpdCIsImRhdGEiLCJ0cmltIiwic3BsaXQiLCJjbWQiLCJhcmdzIiwid3JpdGUiLCJzZXNzaW9uIiwiaXNDb25uZWN0ZWQiLCJ0b0xvd2VyQ2FzZSIsImVuZCIsInVzZXJuYW1lIiwidXNlciIsImRiVXNlciIsImZpbmQiLCJwYXNzd29yZCIsImNoZWNrRGlyIiwicm9vdF9kaXIiLCJkaXJlY3RvcnkiLCJwb3AiLCJ1c2VyX2N1cnJlbnRfZGlyIiwicHdkIiwicGF0aCIsImpvaW4iLCJzdGRvdXQiLCJzdGRlcnIiLCJkaXIiLCJmcyIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJzdHIiLCJmdHAiLCJzdGFydCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYixLQUFtQixJQUFoQzs7SUFFTUMsTTs7Ozs7Ozs7OzJCQUNLSCxJLEVBQU1JLFEsRUFBVTtBQUNuQixVQUFJQyxRQUFRLEdBQUdDLGdCQUFJQyxZQUFKLENBQWlCSCxRQUFqQixDQUFmOztBQUVBQyxNQUFBQSxRQUFRLENBQUNHLEVBQVQsQ0FBWSxPQUFaLEVBQXFCLFVBQUNDLEdBQUQsRUFBUztBQUMxQkMsUUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQWQ7QUFDSCxPQUZEO0FBSUFKLE1BQUFBLFFBQVEsQ0FBQ0csRUFBVCxDQUFZLE9BQVosRUFBcUIsWUFBTTtBQUN2QkUsUUFBQUEsT0FBTyxDQUFDRSxHQUFSLENBQVksa0JBQVo7QUFDSCxPQUZEO0FBSUFQLE1BQUFBLFFBQVEsQ0FBQ1EsTUFBVCxDQUFnQmIsSUFBaEIsRUFBc0IsWUFBTTtBQUN4QlUsUUFBQUEsT0FBTyxDQUFDRSxHQUFSLGtDQUFzQ1osSUFBdEM7QUFDSCxPQUZEO0FBR0g7Ozs7OztJQUdDYyxTOzs7OztBQUNGLHVCQUFjO0FBQUE7O0FBQUE7O0FBQ1Y7QUFDQSxVQUFLZCxJQUFMLEdBQVlBLElBQVo7QUFDQSxVQUFLZSxrQkFBTCxHQUEwQixNQUExQjtBQUhVO0FBSWI7Ozs7NEJBRU87QUFBQTs7QUFDSiw0RUFBYSxLQUFLZixJQUFsQixFQUF3QixVQUFBZ0IsTUFBTSxFQUFJO0FBQzlCTixRQUFBQSxPQUFPLENBQUNFLEdBQVIsQ0FBWSxrQkFBWjtBQUNBSSxRQUFBQSxNQUFNLENBQUNDLFdBQVAsQ0FBbUIsT0FBbkI7QUFDQUQsUUFBQUEsTUFBTSxDQUFDUixFQUFQLENBQVUsT0FBVixFQUFtQixZQUFNO0FBQ3JCRSxVQUFBQSxPQUFPLENBQUNFLEdBQVIsQ0FBWSxxQkFBWjtBQUNILFNBRkQ7QUFHQUksUUFBQUEsTUFBTSxDQUFDUixFQUFQLENBQVUsS0FBVixFQUFpQixZQUFNO0FBQ25CLDBCQUFJLHFCQUFKLEVBQTJCLE1BQTNCO0FBQ0FQLFVBQUFBLE9BQU8sQ0FBQ2lCLElBQVIsQ0FBYSxDQUFiO0FBQ0gsU0FIRDtBQUlBRixRQUFBQSxNQUFNLENBQUNSLEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQUNXLElBQUQsRUFBVTtBQUN4QkEsVUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNDLElBQUwsRUFBUDs7QUFEd0IsNEJBRUhELElBQUksQ0FBQ0UsS0FBTCxDQUFXLEdBQVgsQ0FGRztBQUFBO0FBQUEsY0FFbkJDLEdBRm1CO0FBQUEsY0FFWEMsSUFGVzs7QUFHeEIsY0FBRyxDQUFDLDRCQUFnQkQsR0FBaEIsQ0FBSixFQUF5QjtBQUNyQlosWUFBQUEsT0FBTyxDQUFDRSxHQUFSLENBQVlVLEdBQVo7QUFDQU4sWUFBQUEsTUFBTSxDQUFDUSxLQUFQO0FBQ0E7QUFDSDs7QUFDRCxjQUFJLENBQUMsQ0FBQ1IsTUFBTSxDQUFDUyxPQUFSLElBQW1CLENBQUNULE1BQU0sQ0FBQ1MsT0FBUCxDQUFlQyxXQUFwQyxLQUFvRCxDQUFDLGtDQUFzQkosR0FBdEIsQ0FBekQsRUFBb0Y7QUFDaEZOLFlBQUFBLE1BQU0sQ0FBQ1EsS0FBUDtBQUNBO0FBQ0g7O0FBQ0RGLFVBQUFBLEdBQUcsR0FBR0EsR0FBRyxDQUFDSyxXQUFKLEVBQU47O0FBQ0EsVUFBQSxNQUFJLENBQUNMLEdBQUQsQ0FBSixPQUFBLE1BQUksR0FBTU4sTUFBTiw0QkFBaUJPLElBQWpCLEdBQUo7QUFDSCxTQWREO0FBZUgsT0F6QkQ7QUEwQkg7Ozt5QkFFSVAsTSxFQUFRO0FBQ1RBLE1BQUFBLE1BQU0sQ0FBQ1ksR0FBUDtBQUNIOzs7eUJBRUlaLE0sRUFBUWEsUSxFQUFVO0FBQ25CLFVBQU1DLElBQUksR0FBR0MsZUFBT0MsSUFBUCxDQUFZLFVBQUFGLElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNELFFBQUwsS0FBa0JBLFFBQXRCO0FBQUEsT0FBaEIsQ0FBYjs7QUFDQSxVQUFJLENBQUNDLElBQUwsRUFBVztBQUNQZCxRQUFBQSxNQUFNLENBQUNRLEtBQVAsQ0FBYSxnQkFBYjtBQUNILE9BRkQsTUFFTztBQUNIUixRQUFBQSxNQUFNLENBQUNTLE9BQVAsR0FBaUI7QUFDYkksVUFBQUEsUUFBUSxFQUFSQSxRQURhO0FBRWJILFVBQUFBLFdBQVcsRUFBRTtBQUZBLFNBQWpCO0FBSUFWLFFBQUFBLE1BQU0sQ0FBQ1EsS0FBUCxxQkFBMEJLLFFBQTFCO0FBQ0g7QUFDSjs7O3lCQUVJYixNLEVBQVFpQixRLEVBQVU7QUFDbkIsVUFBSSxDQUFDakIsTUFBTSxDQUFDUyxPQUFaLEVBQXFCO0FBQ2pCVCxRQUFBQSxNQUFNLENBQUNRLEtBQVAsQ0FBYSxhQUFiO0FBQ0E7QUFDSDs7QUFDRCxVQUFNTSxJQUFJLEdBQUdDLGVBQU9DLElBQVAsQ0FBWSxVQUFBRixJQUFJO0FBQUEsZUFBSWQsTUFBTSxDQUFDUyxPQUFQLENBQWVJLFFBQWYsS0FBNEJDLElBQUksQ0FBQ0QsUUFBckM7QUFBQSxPQUFoQixDQUFiOztBQUNBLFVBQUlDLElBQUksQ0FBQ0csUUFBTCxLQUFrQkEsUUFBdEIsRUFBZ0M7QUFDNUJqQixRQUFBQSxNQUFNLENBQUNTLE9BQVAsQ0FBZUMsV0FBZixHQUE2QixJQUE3QjtBQUNBLGFBQUtRLFFBQUwsQ0FBY2xCLE1BQWQsRUFBcUJjLElBQUksQ0FBQ0QsUUFBMUI7QUFDQWIsUUFBQUEsTUFBTSxDQUFDUSxLQUFQO0FBQ0gsT0FKRCxNQUlPO0FBQ0hSLFFBQUFBLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhLHNCQUFiO0FBQ0g7QUFDSjs7O3lCQUVJUixNLEVBQU87QUFDUixVQUFJbUIsUUFBUSxHQUFHbkIsTUFBTSxDQUFDUyxPQUFQLENBQWVXLFNBQWYsQ0FBeUJmLEtBQXpCLENBQStCLEdBQS9CLENBQWY7QUFDQWMsTUFBQUEsUUFBUSxDQUFDRSxHQUFUO0FBQ0EsVUFBTUMsZ0JBQWdCLEdBQUd0QixNQUFNLENBQUNTLE9BQVAsQ0FBZWMsR0FBeEM7QUFDQSwrQ0FBY0MsaUJBQUtDLElBQUwsQ0FBVU4sUUFBUSxDQUFDTSxJQUFULENBQWMsR0FBZCxDQUFWLEVBQThCSCxnQkFBOUIsQ0FBZCxHQUFpRSxVQUFDN0IsR0FBRCxFQUFNaUMsTUFBTixFQUFjQyxNQUFkLEVBQXVCO0FBQ3BGM0IsUUFBQUEsTUFBTSxDQUFDUSxLQUFQLENBQWFrQixNQUFiO0FBQ0gsT0FGRDtBQUdDOzs7NkJBRUkxQixNLEVBQVFhLFEsRUFBVTtBQUN2QixVQUFNZSxHQUFHLEdBQUdKLGlCQUFLQyxJQUFMLENBQVUsS0FBSzFCLGtCQUFmLEVBQW1DYyxRQUFuQyxDQUFaOztBQUNBLFVBQUksQ0FBQ2dCLGVBQUdDLFVBQUgsQ0FBY0YsR0FBZCxDQUFMLEVBQXlCO0FBQ3JCQyx1QkFBR0UsU0FBSCxDQUFhSCxHQUFiO0FBQ0g7O0FBQ0Q1QixNQUFBQSxNQUFNLENBQUNTLE9BQVAsQ0FBZVcsU0FBZixHQUEyQlEsR0FBM0I7QUFDQTVCLE1BQUFBLE1BQU0sQ0FBQ1MsT0FBUCxDQUFlYyxHQUFmLGNBQXlCVixRQUF6QjtBQUNIOzs7d0JBRUdiLE0sRUFBUTtBQUNSQSxNQUFBQSxNQUFNLENBQUNRLEtBQVA7QUFDSDs7O3lCQUVJUixNLEVBQVE7QUFDVCxVQUFNZ0MsR0FBRyx3cEJBQVQ7QUFjQWhDLE1BQUFBLE1BQU0sQ0FBQ1EsS0FBUCxDQUFhd0IsR0FBYjtBQUNIOzs7O0VBMUdtQjdDLE07O0FBNkd4QixJQUFJOEMsR0FBRyxHQUFHLElBQUluQyxTQUFKLEVBQVY7QUFDQW1DLEdBQUcsQ0FBQ0MsS0FBSiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc3QyZGlpby9PbmVEcml2ZSAtIEVmcmVpL1Byb2dQcmFnL215RnRwL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBuZXQgZnJvbSAnbmV0JztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGxvZywgaXNhbGxvd2VkRnRwQ21kLCBpc2FsbG93ZWRGdHBDbWRMb2dnZWQgfSBmcm9tICcuLi9jb21tb24vdXRpbHMnO1xuaW1wb3J0IGRiVXNlciBmcm9tICcuLi9jb25maWcvZGIuanNvbic7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmFyZ3ZbMl0gfHwgODA4MDtcblxuY2xhc3MgU2VydmVyIHtcbiAgICBjcmVhdGUocG9ydCwgY2FsbGJhY2spIHtcbiAgICAgICAgbGV0IGluc3RhbmNlID0gbmV0LmNyZWF0ZVNlcnZlcihjYWxsYmFjayk7XG5cbiAgICAgICAgaW5zdGFuY2Uub24oJ2Vycm9yJywgKGVycikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpbnN0YW5jZS5vbignY2xvc2UnLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU2VydmVyIGp1c3QgZGllZCcpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpbnN0YW5jZS5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFNlcnZlciBzdGFydGVkIG9uIHBvcnQgJHtwb3J0fWApO1xuICAgICAgICB9KVxuICAgIH1cbn1cblxuY2xhc3MgRnRwU2VydmVyIGV4dGVuZHMgU2VydmVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5wb3J0ID0gcG9ydDtcbiAgICAgICAgdGhpcy5ST09UX0ZUUF9ESVJFQ1RPUlkgPSAnL3RtcCc7XG4gICAgfVxuXG4gICAgc3RhcnQoKSB7XG4gICAgICAgIHN1cGVyLmNyZWF0ZSh0aGlzLnBvcnQsIHNvY2tldCA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU29ja2V0IGNvbm5lY3RlZCcpO1xuICAgICAgICAgICAgc29ja2V0LnNldEVuY29kaW5nKCdhc2NpaScpO1xuICAgICAgICAgICAgc29ja2V0Lm9uKCdjbG9zZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU29ja2V0IGRpc2Nvbm5lY3RlZCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzb2NrZXQub24oJ2VuZCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICBsb2coJ0NsaWVudCBkaXNjb25uZWN0ZWQnLCBcImN5YW5cIik7XG4gICAgICAgICAgICAgICAgcHJvY2Vzcy5leGl0KDApO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHNvY2tldC5vbignZGF0YScsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgZGF0YSA9IGRhdGEudHJpbSgpO1xuICAgICAgICAgICAgICAgIGxldCBbY21kLCAuLi5hcmdzXSA9IGRhdGEuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgICAgICBpZighaXNhbGxvd2VkRnRwQ21kKGNtZCkpe1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjbWQpO1xuICAgICAgICAgICAgICAgICAgICBzb2NrZXQud3JpdGUoYFRoaXMgY29tbWFuZCBpcyBub3QgYXZhaWxhYmxlLmApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCghc29ja2V0LnNlc3Npb24gfHwgIXNvY2tldC5zZXNzaW9uLmlzQ29ubmVjdGVkKSAmJiAhaXNhbGxvd2VkRnRwQ21kTG9nZ2VkKGNtZCkpe1xuICAgICAgICAgICAgICAgICAgICBzb2NrZXQud3JpdGUoYFlvdSBuZWVkIHRvIGxvZ2luIGZvb2ApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY21kID0gY21kLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpc1tjbWRdKHNvY2tldCwgLi4uYXJncyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcXVpdChzb2NrZXQpIHtcbiAgICAgICAgc29ja2V0LmVuZCgpO1xuICAgIH1cblxuICAgIHVzZXIoc29ja2V0LCB1c2VybmFtZSkge1xuICAgICAgICBjb25zdCB1c2VyID0gZGJVc2VyLmZpbmQodXNlciA9PiB1c2VyLnVzZXJuYW1lID09PSB1c2VybmFtZSk7XG4gICAgICAgIGlmICghdXNlcikge1xuICAgICAgICAgICAgc29ja2V0LndyaXRlKFwiQWNjb3VudCBuZWVkZWRcIilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNvY2tldC5zZXNzaW9uID0ge1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc29ja2V0LndyaXRlKGBVc2VybmFtZSA8JHt1c2VybmFtZX0+IG9rIC0tIHBhc3N3b3JkIG5lZWRlZGApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcGFzcyhzb2NrZXQsIHBhc3N3b3JkKSB7XG4gICAgICAgIGlmICghc29ja2V0LnNlc3Npb24pIHtcbiAgICAgICAgICAgIHNvY2tldC53cml0ZSgnTG9naW4gZmlyc3QnKTtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVzZXIgPSBkYlVzZXIuZmluZCh1c2VyID0+IHNvY2tldC5zZXNzaW9uLnVzZXJuYW1lID09PSB1c2VyLnVzZXJuYW1lKTtcbiAgICAgICAgaWYgKHVzZXIucGFzc3dvcmQgPT09IHBhc3N3b3JkKSB7XG4gICAgICAgICAgICBzb2NrZXQuc2Vzc2lvbi5pc0Nvbm5lY3RlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmNoZWNrRGlyKHNvY2tldCx1c2VyLnVzZXJuYW1lKTtcbiAgICAgICAgICAgIHNvY2tldC53cml0ZShgUGFzc3dvcmQgYWNjZXB0ZWQsIHlvdSdyZSBsb2dnZWRgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNvY2tldC53cml0ZSgnV3JvbmcgcGFzc3dvcmQsIFJ1biEnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxpc3Qoc29ja2V0KXtcbiAgICAgICAgbGV0IHJvb3RfZGlyID0gc29ja2V0LnNlc3Npb24uZGlyZWN0b3J5LnNwbGl0KCcvJyk7XG4gICAgICAgIHJvb3RfZGlyLnBvcCgpO1xuICAgICAgICBjb25zdCB1c2VyX2N1cnJlbnRfZGlyID0gc29ja2V0LnNlc3Npb24ucHdkO1xuICAgICAgICBleGVjKGBscyAtbCAke3BhdGguam9pbihyb290X2Rpci5qb2luKCcvJyksIHVzZXJfY3VycmVudF9kaXIpfWAsIChlcnIsIHN0ZG91dCwgc3RkZXJyKT0+e1xuICAgICAgICAgICAgc29ja2V0LndyaXRlKHN0ZG91dCk7XG4gICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICBjaGVja0Rpcihzb2NrZXQsIHVzZXJuYW1lKSB7XG4gICAgICAgIGNvbnN0IGRpciA9IHBhdGguam9pbih0aGlzLlJPT1RfRlRQX0RJUkVDVE9SWSwgdXNlcm5hbWUpO1xuICAgICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZGlyKSkge1xuICAgICAgICAgICAgZnMubWtkaXJTeW5jKGRpcilcbiAgICAgICAgfVxuICAgICAgICBzb2NrZXQuc2Vzc2lvbi5kaXJlY3RvcnkgPSBkaXI7XG4gICAgICAgIHNvY2tldC5zZXNzaW9uLnB3ZCA9IGAvJHt1c2VybmFtZX1gO1xuICAgIH1cblxuICAgIHB3ZChzb2NrZXQpIHtcbiAgICAgICAgc29ja2V0LndyaXRlKClcbiAgICB9XG5cbiAgICBoZWxwKHNvY2tldCkge1xuICAgICAgICBjb25zdCBzdHIgPSBgXG4gICAgICAgIFUgZm9vIG5lZWQgc3VtIGhlbHAgOlxuXG4gICAgICAgIC0gVVNFUiA8dXNlcm5hbWU+OiBjaGVjayBpZiB0aGUgdXNlciBleGlzdFxuICAgICAgICAtIFBBU1MgPHBhc3N3b3JkPjogYXV0aGVudGljYXRlIHRoZSB1c2VyIHdpdGggYSBwYXNzd29yZFxuICAgICAgICAtIExJU1Q6IGxpc3QgdGhlIGN1cnJlbnQgZGlyZWN0b3J5IG9mIHRoZSBzZXJ2ZXJcbiAgICAgICAgLSBDV0QgPGRpcmVjdG9yeT46IGNoYW5nZSB0aGUgY3VycmVudCBkaXJlY3Rvcnkgb2YgdGhlIHNlcnZlclxuICAgICAgICAtIFJFVFIgPGZpbGVuYW1lPjogdHJhbnNmZXIgYSBjb3B5IG9mIHRoZSBmaWxlIEZJTEUgZnJvbSB0aGUgc2VydmVyIHRvIHRoZSBjbGllbnRcbiAgICAgICAgLSBTVE9SIDxmaWxlbmFtZT46IHRyYW5zZmVyIGEgY29weSBvZiB0aGUgZmlsZSBGSUxFIGZyb20gdGhlIGNsaWVudCB0byB0aGUgc2VydmVyXG4gICAgICAgIC0gUFdEOiBkaXNwbGF5IHRoZSBuYW1lIG9mIHRoZSBjdXJyZW50IGRpcmVjdG9yeSBvZiB0aGUgc2VydmVyXG4gICAgICAgIC0gSEVMUDogc2VuZCBoZWxwZnVsIGluZm9ybWF0aW9uIHRvIHRoZSBjbGllbnRcbiAgICAgICAgLSBRVUlUOiBjbG9zZSB0aGUgY29ubmVjdGlvbiBhbmQgc3RvcCB0aGUgcHJvZ3JhbVxuICAgICAgICBgXG5cbiAgICAgICAgc29ja2V0LndyaXRlKHN0cik7XG4gICAgfVxufVxuXG5sZXQgZnRwID0gbmV3IEZ0cFNlcnZlcigpO1xuZnRwLnN0YXJ0KCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "myFtpServer.js"
      ],
      "names": [
        "port",
        "process",
        "argv",
        "Server",
        "callback",
        "instance",
        "net",
        "createServer",
        "on",
        "err",
        "console",
        "error",
        "log",
        "listen",
        "FtpServer",
        "ROOT_FTP_DIRECTORY",
        "socket",
        "setEncoding",
        "exit",
        "data",
        "trim",
        "split",
        "cmd",
        "args",
        "write",
        "session",
        "isConnected",
        "toLowerCase",
        "end",
        "username",
        "user",
        "dbUser",
        "find",
        "password",
        "checkDir",
        "root_dir",
        "directory",
        "pop",
        "user_current_dir",
        "pwd",
        "path",
        "join",
        "stdout",
        "stderr",
        "dir",
        "fs",
        "existsSync",
        "mkdirSync",
        "str",
        "ftp",
        "start"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,KAAmB,IAAhC;;IAEMC,M;;;;;;;;;2BACKH,I,EAAMI,Q,EAAU;AACnB,UAAIC,QAAQ,GAAGC,gBAAIC,YAAJ,CAAiBH,QAAjB,CAAf;;AAEAC,MAAAA,QAAQ,CAACG,EAAT,CAAY,OAAZ,EAAqB,UAACC,GAAD,EAAS;AAC1BC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,OAFD;AAIAJ,MAAAA,QAAQ,CAACG,EAAT,CAAY,OAAZ,EAAqB,YAAM;AACvBE,QAAAA,OAAO,CAACE,GAAR,CAAY,kBAAZ;AACH,OAFD;AAIAP,MAAAA,QAAQ,CAACQ,MAAT,CAAgBb,IAAhB,EAAsB,YAAM;AACxBU,QAAAA,OAAO,CAACE,GAAR,kCAAsCZ,IAAtC;AACH,OAFD;AAGH;;;;;;IAGCc,S;;;;;AACF,uBAAc;AAAA;;AAAA;;AACV;AACA,UAAKd,IAAL,GAAYA,IAAZ;AACA,UAAKe,kBAAL,GAA0B,MAA1B;AAHU;AAIb;;;;4BAEO;AAAA;;AACJ,4EAAa,KAAKf,IAAlB,EAAwB,UAAAgB,MAAM,EAAI;AAC9BN,QAAAA,OAAO,CAACE,GAAR,CAAY,kBAAZ;AACAI,QAAAA,MAAM,CAACC,WAAP,CAAmB,OAAnB;AACAD,QAAAA,MAAM,CAACR,EAAP,CAAU,OAAV,EAAmB,YAAM;AACrBE,UAAAA,OAAO,CAACE,GAAR,CAAY,qBAAZ;AACH,SAFD;AAGAI,QAAAA,MAAM,CAACR,EAAP,CAAU,KAAV,EAAiB,YAAM;AACnB,0BAAI,qBAAJ,EAA2B,MAA3B;AACAP,UAAAA,OAAO,CAACiB,IAAR,CAAa,CAAb;AACH,SAHD;AAIAF,QAAAA,MAAM,CAACR,EAAP,CAAU,MAAV,EAAkB,UAACW,IAAD,EAAU;AACxBA,UAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,EAAP;;AADwB,4BAEHD,IAAI,CAACE,KAAL,CAAW,GAAX,CAFG;AAAA;AAAA,cAEnBC,GAFmB;AAAA,cAEXC,IAFW;;AAGxB,cAAG,CAAC,4BAAgBD,GAAhB,CAAJ,EAAyB;AACrBZ,YAAAA,OAAO,CAACE,GAAR,CAAYU,GAAZ;AACAN,YAAAA,MAAM,CAACQ,KAAP;AACA;AACH;;AACD,cAAI,CAAC,CAACR,MAAM,CAACS,OAAR,IAAmB,CAACT,MAAM,CAACS,OAAP,CAAeC,WAApC,KAAoD,CAAC,kCAAsBJ,GAAtB,CAAzD,EAAoF;AAChFN,YAAAA,MAAM,CAACQ,KAAP;AACA;AACH;;AACDF,UAAAA,GAAG,GAAGA,GAAG,CAACK,WAAJ,EAAN;;AACA,UAAA,MAAI,CAACL,GAAD,CAAJ,OAAA,MAAI,GAAMN,MAAN,4BAAiBO,IAAjB,GAAJ;AACH,SAdD;AAeH,OAzBD;AA0BH;;;yBAEIP,M,EAAQ;AACTA,MAAAA,MAAM,CAACY,GAAP;AACH;;;yBAEIZ,M,EAAQa,Q,EAAU;AACnB,UAAMC,IAAI,GAAGC,eAAOC,IAAP,CAAY,UAAAF,IAAI;AAAA,eAAIA,IAAI,CAACD,QAAL,KAAkBA,QAAtB;AAAA,OAAhB,CAAb;;AACA,UAAI,CAACC,IAAL,EAAW;AACPd,QAAAA,MAAM,CAACQ,KAAP,CAAa,gBAAb;AACH,OAFD,MAEO;AACHR,QAAAA,MAAM,CAACS,OAAP,GAAiB;AACbI,UAAAA,QAAQ,EAARA,QADa;AAEbH,UAAAA,WAAW,EAAE;AAFA,SAAjB;AAIAV,QAAAA,MAAM,CAACQ,KAAP,qBAA0BK,QAA1B;AACH;AACJ;;;yBAEIb,M,EAAQiB,Q,EAAU;AACnB,UAAI,CAACjB,MAAM,CAACS,OAAZ,EAAqB;AACjBT,QAAAA,MAAM,CAACQ,KAAP,CAAa,aAAb;AACA;AACH;;AACD,UAAMM,IAAI,GAAGC,eAAOC,IAAP,CAAY,UAAAF,IAAI;AAAA,eAAId,MAAM,CAACS,OAAP,CAAeI,QAAf,KAA4BC,IAAI,CAACD,QAArC;AAAA,OAAhB,CAAb;;AACA,UAAIC,IAAI,CAACG,QAAL,KAAkBA,QAAtB,EAAgC;AAC5BjB,QAAAA,MAAM,CAACS,OAAP,CAAeC,WAAf,GAA6B,IAA7B;AACA,aAAKQ,QAAL,CAAclB,MAAd,EAAqBc,IAAI,CAACD,QAA1B;AACAb,QAAAA,MAAM,CAACQ,KAAP;AACH,OAJD,MAIO;AACHR,QAAAA,MAAM,CAACQ,KAAP,CAAa,sBAAb;AACH;AACJ;;;yBAEIR,M,EAAO;AACR,UAAImB,QAAQ,GAAGnB,MAAM,CAACS,OAAP,CAAeW,SAAf,CAAyBf,KAAzB,CAA+B,GAA/B,CAAf;AACAc,MAAAA,QAAQ,CAACE,GAAT;AACA,UAAMC,gBAAgB,GAAGtB,MAAM,CAACS,OAAP,CAAec,GAAxC;AACA,+CAAcC,iBAAKC,IAAL,CAAUN,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAV,EAA8BH,gBAA9B,CAAd,GAAiE,UAAC7B,GAAD,EAAMiC,MAAN,EAAcC,MAAd,EAAuB;AACpF3B,QAAAA,MAAM,CAACQ,KAAP,CAAakB,MAAb;AACH,OAFD;AAGC;;;6BAEI1B,M,EAAQa,Q,EAAU;AACvB,UAAMe,GAAG,GAAGJ,iBAAKC,IAAL,CAAU,KAAK1B,kBAAf,EAAmCc,QAAnC,CAAZ;;AACA,UAAI,CAACgB,eAAGC,UAAH,CAAcF,GAAd,CAAL,EAAyB;AACrBC,uBAAGE,SAAH,CAAaH,GAAb;AACH;;AACD5B,MAAAA,MAAM,CAACS,OAAP,CAAeW,SAAf,GAA2BQ,GAA3B;AACA5B,MAAAA,MAAM,CAACS,OAAP,CAAec,GAAf,cAAyBV,QAAzB;AACH;;;wBAEGb,M,EAAQ;AACRA,MAAAA,MAAM,CAACQ,KAAP;AACH;;;yBAEIR,M,EAAQ;AACT,UAAMgC,GAAG,wpBAAT;AAcAhC,MAAAA,MAAM,CAACQ,KAAP,CAAawB,GAAb;AACH;;;;EA1GmB7C,M;;AA6GxB,IAAI8C,GAAG,GAAG,IAAInC,SAAJ,EAAV;AACAmC,GAAG,CAACC,KAAJ",
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/server",
      "sourcesContent": [
        "import net from 'net';\nimport fs from 'fs';\nimport path from 'path';\nimport { log, isallowedFtpCmd, isallowedFtpCmdLogged } from '../common/utils';\nimport dbUser from '../config/db.json';\nimport { exec } from 'child_process';\n\nconst port = process.argv[2] || 8080;\n\nclass Server {\n    create(port, callback) {\n        let instance = net.createServer(callback);\n\n        instance.on('error', (err) => {\n            console.error(err);\n        });\n\n        instance.on('close', () => {\n            console.log('Server just died');\n        });\n\n        instance.listen(port, () => {\n            console.log(`Server started on port ${port}`);\n        })\n    }\n}\n\nclass FtpServer extends Server {\n    constructor() {\n        super();\n        this.port = port;\n        this.ROOT_FTP_DIRECTORY = '/tmp';\n    }\n\n    start() {\n        super.create(this.port, socket => {\n            console.log('Socket connected');\n            socket.setEncoding('ascii');\n            socket.on('close', () => {\n                console.log('Socket disconnected');\n            });\n            socket.on('end', () => {\n                log('Client disconnected', \"cyan\");\n                process.exit(0);\n            })\n            socket.on('data', (data) => {\n                data = data.trim();\n                let [cmd, ...args] = data.split(' ');\n                if(!isallowedFtpCmd(cmd)){\n                    console.log(cmd);\n                    socket.write(`This command is not available.`);\n                    return\n                }\n                if ((!socket.session || !socket.session.isConnected) && !isallowedFtpCmdLogged(cmd)){\n                    socket.write(`You need to login foo`);\n                    return\n                }\n                cmd = cmd.toLowerCase();\n                this[cmd](socket, ...args);\n            });\n        });\n    }\n\n    quit(socket) {\n        socket.end();\n    }\n\n    user(socket, username) {\n        const user = dbUser.find(user => user.username === username);\n        if (!user) {\n            socket.write(\"Account needed\")\n        } else {\n            socket.session = {\n                username,\n                isConnected: false\n            }\n            socket.write(`Username <${username}> ok -- password needed`);\n        }\n    }\n\n    pass(socket, password) {\n        if (!socket.session) {\n            socket.write('Login first');\n            return\n        }\n        const user = dbUser.find(user => socket.session.username === user.username);\n        if (user.password === password) {\n            socket.session.isConnected = true;\n            this.checkDir(socket,user.username);\n            socket.write(`Password accepted, you're logged`);\n        } else {\n            socket.write('Wrong password, Run!');\n        }\n    }\n\n    list(socket){\n        let root_dir = socket.session.directory.split('/');\n        root_dir.pop();\n        const user_current_dir = socket.session.pwd;\n        exec(`ls -l ${path.join(root_dir.join('/'), user_current_dir)}`, (err, stdout, stderr)=>{\n            socket.write(stdout);\n        });\n        }\n\n    checkDir(socket, username) {\n        const dir = path.join(this.ROOT_FTP_DIRECTORY, username);\n        if (!fs.existsSync(dir)) {\n            fs.mkdirSync(dir)\n        }\n        socket.session.directory = dir;\n        socket.session.pwd = `/${username}`;\n    }\n\n    pwd(socket) {\n        socket.write()\n    }\n\n    help(socket) {\n        const str = `\n        U foo need sum help :\n\n        - USER <username>: check if the user exist\n        - PASS <password>: authenticate the user with a password\n        - LIST: list the current directory of the server\n        - CWD <directory>: change the current directory of the server\n        - RETR <filename>: transfer a copy of the file FILE from the server to the client\n        - STOR <filename>: transfer a copy of the file FILE from the client to the server\n        - PWD: display the name of the current directory of the server\n        - HELP: send helpful information to the client\n        - QUIT: close the connection and stop the program\n        `\n\n        socket.write(str);\n    }\n}\n\nlet ftp = new FtpServer();\nftp.start();"
      ]
    },
    "sourceType": "script",
    "mtime": 1569346858548
  },
  "{\"sourceRoot\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"filename\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client/myFtpClient.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client/myFtpClient.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client/myFtpClient.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client/myFtpClient.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client",
        "sourceFileName": "myFtpClient.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _utils = require(\"../common/utils\");\n\nvar _readline = _interopRequireDefault(require(\"readline\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// const host = process.argv[2] || '127.0.0.1';\n// const port = process.argv[3];\nvar FtpClient =\n/*#__PURE__*/\nfunction () {\n  function FtpClient(host, port) {\n    _classCallCheck(this, FtpClient);\n\n    this.host = host;\n    this.port = port;\n  }\n\n  _createClass(FtpClient, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this = this;\n\n      this.socket = _net[\"default\"].createConnection({\n        host: this.host,\n        port: this.port\n      }, function () {\n        (0, _utils.log)('Client connected', \"green\");\n\n        _this.prompt();\n      });\n      this.socket.on('data', function (data) {\n        (0, _utils.log)(data.toString(), \"blue\");\n\n        _this.prompt();\n      });\n    }\n  }, {\n    key: \"prompt\",\n    value: function prompt() {\n      var _this2 = this;\n\n      (0, _utils.log)('>>> ', \"white\", false);\n\n      var cmd = _readline[\"default\"].createInterface({\n        input: process.stdin\n      });\n\n      cmd.on('line', function (input) {\n        _this2.socket.write(input);\n\n        cmd.close();\n      });\n    }\n  }]);\n\n  return FtpClient;\n}();\n\nvar args = (0, _utils.argv)();\n\nif (args.length != 2) {\n  (0, _utils.log)(\"Usage: { client.js <host> <port> }\", \"red\");\n  process.exit(0);\n}\n\nvar _args = _slicedToArray(args, 2),\n    host = _args[0],\n    port = _args[1];\n\nvar Client = new FtpClient(host, port);\nClient.connect();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15RnRwQ2xpZW50LmpzIl0sIm5hbWVzIjpbIkZ0cENsaWVudCIsImhvc3QiLCJwb3J0Iiwic29ja2V0IiwibmV0IiwiY3JlYXRlQ29ubmVjdGlvbiIsInByb21wdCIsIm9uIiwiZGF0YSIsInRvU3RyaW5nIiwiY21kIiwicmVhZExpbmUiLCJjcmVhdGVJbnRlcmZhY2UiLCJpbnB1dCIsInByb2Nlc3MiLCJzdGRpbiIsIndyaXRlIiwiY2xvc2UiLCJhcmdzIiwibGVuZ3RoIiwiZXhpdCIsIkNsaWVudCIsImNvbm5lY3QiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBO0FBQ0E7SUFFTUEsUzs7O0FBQ0YscUJBQVlDLElBQVosRUFBa0JDLElBQWxCLEVBQXVCO0FBQUE7O0FBQ25CLFNBQUtELElBQUwsR0FBWUEsSUFBWjtBQUNBLFNBQUtDLElBQUwsR0FBWUEsSUFBWjtBQUNIOzs7OzhCQUVRO0FBQUE7O0FBQ0wsV0FBS0MsTUFBTCxHQUFjQyxnQkFBSUMsZ0JBQUosQ0FBcUI7QUFDL0JKLFFBQUFBLElBQUksRUFBRSxLQUFLQSxJQURvQjtBQUUvQkMsUUFBQUEsSUFBSSxFQUFFLEtBQUtBO0FBRm9CLE9BQXJCLEVBRVEsWUFBSTtBQUNsQix3QkFBSSxrQkFBSixFQUF3QixPQUF4Qjs7QUFDQSxRQUFBLEtBQUksQ0FBQ0ksTUFBTDtBQUNILE9BTFMsQ0FBZDtBQU9BLFdBQUtILE1BQUwsQ0FBWUksRUFBWixDQUFlLE1BQWYsRUFBdUIsVUFBQ0MsSUFBRCxFQUFRO0FBQzNCLHdCQUFJQSxJQUFJLENBQUNDLFFBQUwsRUFBSixFQUFxQixNQUFyQjs7QUFDQSxRQUFBLEtBQUksQ0FBQ0gsTUFBTDtBQUNILE9BSEQ7QUFJSDs7OzZCQUVPO0FBQUE7O0FBQ0osc0JBQUksTUFBSixFQUFZLE9BQVosRUFBcUIsS0FBckI7O0FBQ0EsVUFBTUksR0FBRyxHQUFHQyxxQkFBU0MsZUFBVCxDQUF5QjtBQUNqQ0MsUUFBQUEsS0FBSyxFQUFFQyxPQUFPLENBQUNDO0FBRGtCLE9BQXpCLENBQVo7O0FBR0FMLE1BQUFBLEdBQUcsQ0FBQ0gsRUFBSixDQUFPLE1BQVAsRUFBZSxVQUFDTSxLQUFELEVBQVM7QUFDcEIsUUFBQSxNQUFJLENBQUNWLE1BQUwsQ0FBWWEsS0FBWixDQUFrQkgsS0FBbEI7O0FBQ0FILFFBQUFBLEdBQUcsQ0FBQ08sS0FBSjtBQUNILE9BSEQ7QUFJSDs7Ozs7O0FBR0wsSUFBTUMsSUFBSSxHQUFHLGtCQUFiOztBQUVBLElBQUdBLElBQUksQ0FBQ0MsTUFBTCxJQUFlLENBQWxCLEVBQW9CO0FBQ2hCLGtCQUFJLG9DQUFKLEVBQTBDLEtBQTFDO0FBQ0FMLEVBQUFBLE9BQU8sQ0FBQ00sSUFBUixDQUFhLENBQWI7QUFDSDs7MkJBRW9CRixJO0lBQWRqQixJO0lBQU1DLEk7O0FBRWIsSUFBTW1CLE1BQU0sR0FBRyxJQUFJckIsU0FBSixDQUFjQyxJQUFkLEVBQW9CQyxJQUFwQixDQUFmO0FBQ0FtQixNQUFNLENBQUNDLE9BQVAiLCJzb3VyY2VSb290IjoiL1VzZXJzL3N0MmRpaW8vT25lRHJpdmUgLSBFZnJlaS9Qcm9nUHJhZy9teUZ0cC9jbGllbnQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbmV0IGZyb20gJ25ldCc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHthcmd2LCBsb2d9IGZyb20gJy4uL2NvbW1vbi91dGlscyc7XG5pbXBvcnQgcmVhZExpbmUgZnJvbSAncmVhZGxpbmUnO1xuXG4vLyBjb25zdCBob3N0ID0gcHJvY2Vzcy5hcmd2WzJdIHx8ICcxMjcuMC4wLjEnO1xuLy8gY29uc3QgcG9ydCA9IHByb2Nlc3MuYXJndlszXTtcblxuY2xhc3MgRnRwQ2xpZW50e1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIHBvcnQpe1xuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgICAgICB0aGlzLnBvcnQgPSBwb3J0O1xuICAgIH1cblxuICAgIGNvbm5lY3QoKXtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBuZXQuY3JlYXRlQ29ubmVjdGlvbih7XG4gICAgICAgICAgICBob3N0OiB0aGlzLmhvc3QsXG4gICAgICAgICAgICBwb3J0OiB0aGlzLnBvcnR9LCAoKT0+e1xuICAgICAgICAgICAgICAgIGxvZygnQ2xpZW50IGNvbm5lY3RlZCcsIFwiZ3JlZW5cIik7XG4gICAgICAgICAgICAgICAgdGhpcy5wcm9tcHQoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuc29ja2V0Lm9uKCdkYXRhJywgKGRhdGEpPT57XG4gICAgICAgICAgICBsb2coZGF0YS50b1N0cmluZygpLCBcImJsdWVcIik7XG4gICAgICAgICAgICB0aGlzLnByb21wdCgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcm9tcHQoKXtcbiAgICAgICAgbG9nKCc+Pj4gJywgXCJ3aGl0ZVwiLCBmYWxzZSk7XG4gICAgICAgIGNvbnN0IGNtZCA9IHJlYWRMaW5lLmNyZWF0ZUludGVyZmFjZSh7XG4gICAgICAgICAgICBpbnB1dDogcHJvY2Vzcy5zdGRpblxuICAgICAgICB9KTtcbiAgICAgICAgY21kLm9uKCdsaW5lJywgKGlucHV0KT0+e1xuICAgICAgICAgICAgdGhpcy5zb2NrZXQud3JpdGUoaW5wdXQpO1xuICAgICAgICAgICAgY21kLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuY29uc3QgYXJncyA9IGFyZ3YoKTtcblxuaWYoYXJncy5sZW5ndGggIT0gMil7XG4gICAgbG9nKFwiVXNhZ2U6IHsgY2xpZW50LmpzIDxob3N0PiA8cG9ydD4gfVwiLCBcInJlZFwiKVxuICAgIHByb2Nlc3MuZXhpdCgwKVxufVxuXG5jb25zdCBbaG9zdCwgcG9ydF0gPSBhcmdzOyBcblxuY29uc3QgQ2xpZW50ID0gbmV3IEZ0cENsaWVudChob3N0LCBwb3J0KTtcbkNsaWVudC5jb25uZWN0KCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "myFtpClient.js"
      ],
      "names": [
        "FtpClient",
        "host",
        "port",
        "socket",
        "net",
        "createConnection",
        "prompt",
        "on",
        "data",
        "toString",
        "cmd",
        "readLine",
        "createInterface",
        "input",
        "process",
        "stdin",
        "write",
        "close",
        "args",
        "length",
        "exit",
        "Client",
        "connect"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;IAEMA,S;;;AACF,qBAAYC,IAAZ,EAAkBC,IAAlB,EAAuB;AAAA;;AACnB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH;;;;8BAEQ;AAAA;;AACL,WAAKC,MAAL,GAAcC,gBAAIC,gBAAJ,CAAqB;AAC/BJ,QAAAA,IAAI,EAAE,KAAKA,IADoB;AAE/BC,QAAAA,IAAI,EAAE,KAAKA;AAFoB,OAArB,EAEQ,YAAI;AAClB,wBAAI,kBAAJ,EAAwB,OAAxB;;AACA,QAAA,KAAI,CAACI,MAAL;AACH,OALS,CAAd;AAOA,WAAKH,MAAL,CAAYI,EAAZ,CAAe,MAAf,EAAuB,UAACC,IAAD,EAAQ;AAC3B,wBAAIA,IAAI,CAACC,QAAL,EAAJ,EAAqB,MAArB;;AACA,QAAA,KAAI,CAACH,MAAL;AACH,OAHD;AAIH;;;6BAEO;AAAA;;AACJ,sBAAI,MAAJ,EAAY,OAAZ,EAAqB,KAArB;;AACA,UAAMI,GAAG,GAAGC,qBAASC,eAAT,CAAyB;AACjCC,QAAAA,KAAK,EAAEC,OAAO,CAACC;AADkB,OAAzB,CAAZ;;AAGAL,MAAAA,GAAG,CAACH,EAAJ,CAAO,MAAP,EAAe,UAACM,KAAD,EAAS;AACpB,QAAA,MAAI,CAACV,MAAL,CAAYa,KAAZ,CAAkBH,KAAlB;;AACAH,QAAAA,GAAG,CAACO,KAAJ;AACH,OAHD;AAIH;;;;;;AAGL,IAAMC,IAAI,GAAG,kBAAb;;AAEA,IAAGA,IAAI,CAACC,MAAL,IAAe,CAAlB,EAAoB;AAChB,kBAAI,oCAAJ,EAA0C,KAA1C;AACAL,EAAAA,OAAO,CAACM,IAAR,CAAa,CAAb;AACH;;2BAEoBF,I;IAAdjB,I;IAAMC,I;;AAEb,IAAMmB,MAAM,GAAG,IAAIrB,SAAJ,CAAcC,IAAd,EAAoBC,IAApB,CAAf;AACAmB,MAAM,CAACC,OAAP",
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/client",
      "sourcesContent": [
        "import net from 'net';\nimport fs from 'fs';\nimport {argv, log} from '../common/utils';\nimport readLine from 'readline';\n\n// const host = process.argv[2] || '127.0.0.1';\n// const port = process.argv[3];\n\nclass FtpClient{\n    constructor(host, port){\n        this.host = host;\n        this.port = port;\n    }\n\n    connect(){\n        this.socket = net.createConnection({\n            host: this.host,\n            port: this.port}, ()=>{\n                log('Client connected', \"green\");\n                this.prompt();\n            });\n\n        this.socket.on('data', (data)=>{\n            log(data.toString(), \"blue\");\n            this.prompt();\n        });\n    }\n\n    prompt(){\n        log('>>> ', \"white\", false);\n        const cmd = readLine.createInterface({\n            input: process.stdin\n        });\n        cmd.on('line', (input)=>{\n            this.socket.write(input);\n            cmd.close();\n        });\n    }\n}\n\nconst args = argv();\n\nif(args.length != 2){\n    log(\"Usage: { client.js <host> <port> }\", \"red\")\n    process.exit(0)\n}\n\nconst [host, port] = args; \n\nconst Client = new FtpClient(host, port);\nClient.connect();"
      ]
    },
    "sourceType": "script",
    "mtime": 1569319800603
  },
  "{\"sourceRoot\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"filename\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common/utils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.argv = argv;\nexports.log = log;\nexports.isallowedFtpCmdLogged = isallowedFtpCmdLogged;\nexports.isallowedFtpCmd = isallowedFtpCmd;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction argv() {\n  return process.argv.splice(2);\n}\n\nfunction log(string) {\n  var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'blue';\n  var withNewLine = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  var toReturn = _chalk[\"default\"][color](string);\n\n  if (withNewLine) {\n    console.log(toReturn);\n  } else {\n    process.stdout.write(toReturn);\n  }\n}\n\nvar allowedFtpCmdNotLog = ['QUIT', 'HELP', 'PASS', 'USER'];\nvar allowedFtpCmd = ['PWD', 'LIST', 'CWD', 'RETR', 'STOR'];\n\nfunction isallowedFtpCmdLogged(cmd) {\n  return allowedFtpCmd.includes(cmd.toUpperCase()) || allowedFtpCmdNotLog.includes(cmd.toUpperCase());\n}\n\nfunction isallowedFtpCmd(cmd) {\n  return allowedFtpCmdNotLog.includes(cmd.toUpperCase());\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImFyZ3YiLCJwcm9jZXNzIiwic3BsaWNlIiwibG9nIiwic3RyaW5nIiwiY29sb3IiLCJ3aXRoTmV3TGluZSIsInRvUmV0dXJuIiwiY2hhbGsiLCJjb25zb2xlIiwic3Rkb3V0Iiwid3JpdGUiLCJhbGxvd2VkRnRwQ21kTm90TG9nIiwiYWxsb3dlZEZ0cENtZCIsImlzYWxsb3dlZEZ0cENtZExvZ2dlZCIsImNtZCIsImluY2x1ZGVzIiwidG9VcHBlckNhc2UiLCJpc2FsbG93ZWRGdHBDbWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztBQUVPLFNBQVNBLElBQVQsR0FBZTtBQUNsQixTQUFPQyxPQUFPLENBQUNELElBQVIsQ0FBYUUsTUFBYixDQUFvQixDQUFwQixDQUFQO0FBQ0g7O0FBRU0sU0FBU0MsR0FBVCxDQUFhQyxNQUFiLEVBQW9EO0FBQUEsTUFBL0JDLEtBQStCLHVFQUF6QixNQUF5QjtBQUFBLE1BQWpCQyxXQUFpQix1RUFBTCxJQUFLOztBQUN2RCxNQUFJQyxRQUFRLEdBQUdDLGtCQUFNSCxLQUFOLEVBQWFELE1BQWIsQ0FBZjs7QUFDQSxNQUFHRSxXQUFILEVBQWU7QUFDWEcsSUFBQUEsT0FBTyxDQUFDTixHQUFSLENBQVlJLFFBQVo7QUFDSCxHQUZELE1BRU87QUFDSE4sSUFBQUEsT0FBTyxDQUFDUyxNQUFSLENBQWVDLEtBQWYsQ0FBcUJKLFFBQXJCO0FBQ0g7QUFDSjs7QUFFRCxJQUFNSyxtQkFBbUIsR0FBRyxDQUN4QixNQUR3QixFQUV4QixNQUZ3QixFQUd4QixNQUh3QixFQUl4QixNQUp3QixDQUE1QjtBQU9BLElBQU1DLGFBQWEsR0FBRyxDQUNsQixLQURrQixFQUVsQixNQUZrQixFQUdsQixLQUhrQixFQUlsQixNQUprQixFQUtsQixNQUxrQixDQUF0Qjs7QUFRTyxTQUFTQyxxQkFBVCxDQUErQkMsR0FBL0IsRUFBbUM7QUFDdEMsU0FBT0YsYUFBYSxDQUFDRyxRQUFkLENBQXVCRCxHQUFHLENBQUNFLFdBQUosRUFBdkIsS0FBNkNMLG1CQUFtQixDQUFDSSxRQUFwQixDQUE2QkQsR0FBRyxDQUFDRSxXQUFKLEVBQTdCLENBQXBEO0FBQ0g7O0FBRU0sU0FBU0MsZUFBVCxDQUF5QkgsR0FBekIsRUFBNkI7QUFDaEMsU0FBT0gsbUJBQW1CLENBQUNJLFFBQXBCLENBQTZCRCxHQUFHLENBQUNFLFdBQUosRUFBN0IsQ0FBUDtBQUNIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zdDJkaWlvL09uZURyaXZlIC0gRWZyZWkvUHJvZ1ByYWcvbXlGdHAvY29tbW9uIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWxrIGZyb20gJ2NoYWxrJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFyZ3YoKXtcbiAgICByZXR1cm4gcHJvY2Vzcy5hcmd2LnNwbGljZSgyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvZyhzdHJpbmcsIGNvbG9yPSdibHVlJywgd2l0aE5ld0xpbmU9dHJ1ZSl7XG4gICAgbGV0IHRvUmV0dXJuID0gY2hhbGtbY29sb3JdKHN0cmluZyk7XG4gICAgaWYod2l0aE5ld0xpbmUpe1xuICAgICAgICBjb25zb2xlLmxvZyh0b1JldHVybik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUodG9SZXR1cm4pO1xuICAgIH1cbn1cblxuY29uc3QgYWxsb3dlZEZ0cENtZE5vdExvZyA9IFtcbiAgICAnUVVJVCcsXG4gICAgJ0hFTFAnLFxuICAgICdQQVNTJyxcbiAgICAnVVNFUidcbl1cblxuY29uc3QgYWxsb3dlZEZ0cENtZCA9IFsgXG4gICAgJ1BXRCcsXG4gICAgJ0xJU1QnLFxuICAgICdDV0QnLFxuICAgICdSRVRSJyxcbiAgICAnU1RPUidcbl1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzYWxsb3dlZEZ0cENtZExvZ2dlZChjbWQpe1xuICAgIHJldHVybiBhbGxvd2VkRnRwQ21kLmluY2x1ZGVzKGNtZC50b1VwcGVyQ2FzZSgpKSB8fCBhbGxvd2VkRnRwQ21kTm90TG9nLmluY2x1ZGVzKGNtZC50b1VwcGVyQ2FzZSgpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzYWxsb3dlZEZ0cENtZChjbWQpe1xuICAgIHJldHVybiBhbGxvd2VkRnRwQ21kTm90TG9nLmluY2x1ZGVzKGNtZC50b1VwcGVyQ2FzZSgpKTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "argv",
        "process",
        "splice",
        "log",
        "string",
        "color",
        "withNewLine",
        "toReturn",
        "chalk",
        "console",
        "stdout",
        "write",
        "allowedFtpCmdNotLog",
        "allowedFtpCmd",
        "isallowedFtpCmdLogged",
        "cmd",
        "includes",
        "toUpperCase",
        "isallowedFtpCmd"
      ],
      "mappings": ";;;;;;;;;;AAAA;;;;AAEO,SAASA,IAAT,GAAe;AAClB,SAAOC,OAAO,CAACD,IAAR,CAAaE,MAAb,CAAoB,CAApB,CAAP;AACH;;AAEM,SAASC,GAAT,CAAaC,MAAb,EAAoD;AAAA,MAA/BC,KAA+B,uEAAzB,MAAyB;AAAA,MAAjBC,WAAiB,uEAAL,IAAK;;AACvD,MAAIC,QAAQ,GAAGC,kBAAMH,KAAN,EAAaD,MAAb,CAAf;;AACA,MAAGE,WAAH,EAAe;AACXG,IAAAA,OAAO,CAACN,GAAR,CAAYI,QAAZ;AACH,GAFD,MAEO;AACHN,IAAAA,OAAO,CAACS,MAAR,CAAeC,KAAf,CAAqBJ,QAArB;AACH;AACJ;;AAED,IAAMK,mBAAmB,GAAG,CACxB,MADwB,EAExB,MAFwB,EAGxB,MAHwB,EAIxB,MAJwB,CAA5B;AAOA,IAAMC,aAAa,GAAG,CAClB,KADkB,EAElB,MAFkB,EAGlB,KAHkB,EAIlB,MAJkB,EAKlB,MALkB,CAAtB;;AAQO,SAASC,qBAAT,CAA+BC,GAA/B,EAAmC;AACtC,SAAOF,aAAa,CAACG,QAAd,CAAuBD,GAAG,CAACE,WAAJ,EAAvB,KAA6CL,mBAAmB,CAACI,QAApB,CAA6BD,GAAG,CAACE,WAAJ,EAA7B,CAApD;AACH;;AAEM,SAASC,eAAT,CAAyBH,GAAzB,EAA6B;AAChC,SAAOH,mBAAmB,CAACI,QAApB,CAA6BD,GAAG,CAACE,WAAJ,EAA7B,CAAP;AACH",
      "sourceRoot": "/Users/st2diio/OneDrive - Efrei/ProgPrag/myFtp/common",
      "sourcesContent": [
        "import chalk from 'chalk';\n\nexport function argv(){\n    return process.argv.splice(2);\n}\n\nexport function log(string, color='blue', withNewLine=true){\n    let toReturn = chalk[color](string);\n    if(withNewLine){\n        console.log(toReturn);\n    } else {\n        process.stdout.write(toReturn);\n    }\n}\n\nconst allowedFtpCmdNotLog = [\n    'QUIT',\n    'HELP',\n    'PASS',\n    'USER'\n]\n\nconst allowedFtpCmd = [ \n    'PWD',\n    'LIST',\n    'CWD',\n    'RETR',\n    'STOR'\n]\n\nexport function isallowedFtpCmdLogged(cmd){\n    return allowedFtpCmd.includes(cmd.toUpperCase()) || allowedFtpCmdNotLog.includes(cmd.toUpperCase());\n}\n\nexport function isallowedFtpCmd(cmd){\n    return allowedFtpCmdNotLog.includes(cmd.toUpperCase());\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1569327021188
  }
}